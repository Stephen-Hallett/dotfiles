name: Create VSCode Releases

on:
  push:
    branches: ["main"]
    paths:
      - "VSCode/**"
      - ".github/workflows/vscode-release.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "VSCode/package.json"
      - ".github/workflows/vscode-release.yml"
  workflow_dispatch:

permissions:
  contents: write
  packages: write

defaults:
  run:
    working-directory: ./VSCode

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Compile TypeScript
        run: npx tsc --project tsconfig.json

      - name: Create release folder
        run: mkdir -p release

      - name: Package extension
        run: npx vsce package --out release/vscode-config.vsix

      - name: Upload VSIX as artifact
        uses: actions/upload-artifact@v4
        with:
          name: vscode-config.vsix
          path: VSCode/release/vscode-config.vsix

  release:
    needs:
      - build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release
          merge-multiple: true

      - name: List downloaded files
        run: ls && pwd

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Set release tag and name
        id: set_tag
        run: |
          echo "tag=$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo "today_date=$(date '+%-d %b %Y %H:%M')" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_tag.outputs.tag }}
          release_name: VSCode Config ${{ steps.set_tag.outputs.today_date }}
          draft: false
          prerelease: false

      - name: Upload VSIX files to Release
        run: |
          find ../release -name '*.vsix' -exec gh release upload ${{ steps.set_tag.outputs.tag }} {} \;
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
